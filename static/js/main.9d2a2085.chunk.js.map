{"version":3,"sources":["SingleFile.js","MultipleFile.js","App.js","serviceWorker.js","index.js"],"names":["SingleFile","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","handleChange","event","value","Number","target","name","formData","state","console","log","setState","handleChange2","e","handlePredictClick","flag","Object","values","forEach","val","length","alert","isLoading","fetch","headers","Accept","Content-Type","method","body","JSON","stringify","then","response","json","result","catch","err","handleOptions","isNaN","handleCancelClick","Age","BusinessTravel","MonthlyIncome","MonthlyRate","Department","DistanceFromHome","Education","EducationField","EnvironmentSatisfaction","Gender","HourlyRate","DailyRate","JobInvolvement","JobLevel","JobRole","JobSatisfaction","MaritalStatus","NumCompaniesWorked","OverTime","StandardHours","PercentSalaryHike","PerformanceRating","RelationshipSatisfaction","StockOptionLevel","TotalWorkingYears","TrainingTimesLastYear","WorkLifeBalance","YearsAtCompany","YearsInCurrentRole","YearsSinceLastPromotion","YearsWithCurrManager","_inherits","_createClass","key","React","createElement","Container","className","placeholder","type","onChange","Form","Row","Group","as","Col","Label","Control","Button","block","variant","disabled","onClick","id","Component","MultipleFile","handleExcel","preventDefault","data","rows","res","i","j","k","indexOf","previousState","concat","_toConsumableArray","fileHandler","cols","fileObj","files","ExcelRenderer","resp","toExcel","excelData","index","push","ans","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","theInputKey","randomString","Math","random","toString","bind","style","padding","accept","functionThatResetsTheFileInput","App","changeRoute1","changeRoute2","parse","window","localStorage","getItem","handlePopstate","_assertThisInitialized","addEventListener","removeEventListener","setItem","_get","prototype","_this2","Router","Link","to","Routes","Route","path","element","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d2a2085.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./SU.css\";\r\n\r\nclass SingleFile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      name: \"\",\r\n      formData: {\r\n        Age:\"\", \r\n        BusinessTravel:\"\",\r\n        MonthlyIncome:\"\", \r\n        MonthlyRate:\"\", \r\n        Department:\"\",\r\n        DistanceFromHome:\"\",\r\n        Education:\"\", \r\n        EducationField:\"\", \r\n        EnvironmentSatisfaction:\"\", \r\n        Gender:\"\", \r\n        HourlyRate:\"\", \r\n        DailyRate:\"\", \r\n        JobInvolvement:\"\",\r\n        JobLevel:\"\",\t\r\n        JobRole:\"\", \r\n        JobSatisfaction:\"\", \r\n        MaritalStatus:\"\", \r\n        NumCompaniesWorked:\"\",\r\n        OverTime:\"\", \r\n        StandardHours:\"\", \r\n        PercentSalaryHike:\"\", \r\n        PerformanceRating:\"\", \r\n        RelationshipSatisfaction:\"\", \r\n        StockOptionLevel:\"\",\t\r\n        TotalWorkingYears:\"\", \r\n        TrainingTimesLastYear:\"\", \r\n        WorkLifeBalance:\"\", \r\n        YearsAtCompany:\"\", \r\n        YearsInCurrentRole:\"\", \r\n        YearsSinceLastPromotion:\"\", \r\n        YearsWithCurrManager:\"\",\r\n\r\n        // age: 0,\r\n        // business_travel: 0,\r\n        // monthly_income: 0,\r\n        // department: 0,\r\n        // distance_home: 0,\r\n        // education: 0,\r\n        // education_field: 0,\r\n        // environment_satisfaction: 0,\r\n        // gender: 0,\r\n        // job_involvement: 0,\r\n        // job_level: 0,\r\n        // job_role: 0,\r\n        // job_satisfaction: 0,\r\n        // marital_status: 0,\r\n        // num_comp_worked: 0,\r\n        // overtime: 0,\r\n        // percent_salary_hike: 0,\r\n        // performance_rating: 0,\r\n        // relationship_satisfaction: 0,\r\n        // stock_option_level: 0,\r\n        // total_working_years: 0,\r\n        // training_times_last_y: 0,\r\n        // work_life_balance: 0,\r\n        // years_at_company: 0,\r\n        // years_in_current_role: 0,\r\n        // years_since_last_promotion: 0,\r\n        // years_with_curr_manager: 0,\r\n      },\r\n      result: \"\",\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const value = Number(event.target.value);\r\n    const name = event.target.name;\r\n    var formData = this.state.formData;\r\n    formData[name] = value;\r\n    console.log(typeof value, formData);\r\n    this.setState({\r\n      formData,\r\n    });\r\n  };\r\n\r\n  handleChange2 = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({\r\n      name: value,\r\n    });\r\n  };\r\n                          \r\n  handlePredictClick = (event) => {\r\n    const formData = this.state.formData;\r\n    // console.log(formData)\r\n    let flag=0;\r\n    Object.values(formData).forEach(val => {\r\n        if(val.length===0) flag=1;\r\n    });\r\n    if(flag===1) return alert('Please provide all data');\r\n\r\n    this.setState({ isLoading: true });\r\n    fetch(\"http://mindhunter.pythonanywhere.com/predict\", {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(formData),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response)\r\n        this.setState({\r\n          result: response.result,\r\n          isLoading: false,\r\n        });\r\n      }).catch(err => console.log(err));\r\n  };\r\n\r\n  handleOptions = (e) =>{\r\n    const value = Number(e.target.value[0]);\r\n    if(isNaN(value)){ \r\n      console.log(e.target.value[0]);\r\n      return;}\r\n    const name = e.target.name;\r\n    var formData = this.state.formData;\r\n    formData[name] = value;\r\n    console.log(typeof value, formData);\r\n    this.setState({\r\n      formData,\r\n    });\r\n  }\r\n\r\n  handleCancelClick = (event) => {\r\n    this.setState({ result: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const isLoading = this.state.isLoading;\r\n    const name = this.state.name;\r\n    const formData = this.state.formData;\r\n    const result = this.state.result;\r\n\r\n    return (\r\n      <Container>\r\n        <div className=\"p1\">\r\n          <input\r\n            className=\"t1\"\r\n            placeholder=\"Enter Emp Name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handleChange2}\r\n          />\r\n        </div>\r\n        <div className=\"content\">\r\n          {/* <Form> */}\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Age</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Emp Age\"\r\n                name=\"Age\"\r\n                value={formData.Age}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Business_travel</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter business_travel\"\r\n                name=\"BusinessTravel\"\r\n                value={formData.BusinessTravel}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"BusinessTravel\"\r\n              //  value={formData.BusinessTravel}\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option</option>\r\n                <option>0 - Travel_Rarely </option>\r\n                <option>1 - Travel_Frequently</option>\r\n                <option>2 - Non-Travel</option>\r\n              </select>\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Monthly_Income</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter monthly_income\"\r\n                name=\"MonthlyIncome\"\r\n                value={formData.MonthlyIncome}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Department</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"enter department\"\r\n                name=\"Department\"\r\n                value={formData.Department}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"Department\"\r\n              //  value={formData.Department}\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option</option>\r\n                <option>0 - Sales</option>\r\n                <option>1 - Research & Development</option>\r\n                <option>2 - Human Resources</option>\r\n              </select>\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>MonthlyRate</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\" Enter monthly_rate(i.e CTC + perks)\"\r\n                name=\"MonthlyRate\"\r\n                value={formData.MonthlyRate}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>DailyRate</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter daily_income of Employee\"\r\n                name=\"DailyRate\"\r\n                value={formData.DailyRate}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          \r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>HourlyRate</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter hourly_income of Employee\"\r\n                name=\"HourlyRate\"\r\n                value={formData.HourlyRate}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>StandardHours</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter standard working hours\"\r\n                name=\"StandardHours\"\r\n                value={formData.StandardHours}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Distance_from_home</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Employee's distance_from_home\"\r\n                name=\"DistanceFromHome\"\r\n                value={formData.DistanceFromHome}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Education</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                name=\"Education\"\r\n                placeholder=\"education\"\r\n                value={formData.Education}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"Education\"\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option</option>\r\n                <option>1 - Below College</option>\r\n                <option>2 - College</option>\r\n                <option>3 - Bachelor</option>\r\n                <option>4 - Master</option>\r\n                <option>5 - Doctor</option>\r\n              </select>\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Education_field</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                name=\"EducationField\"\r\n                placeholder=\"education_field\"\r\n                value={formData.EducationField}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"EducationField\"\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option</option>\r\n                <option>0 - Life_Sciences </option>\r\n                <option>1 - Medical</option>\r\n                <option>2 - Marketing</option>\r\n                <option>3 - Technical_Degree</option>\r\n                <option>4 - Human Resources</option>\r\n                <option>5 - Others</option>\r\n              </select>\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Environment_satisfaction</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"environment_satisfaction\"\r\n                name=\"EnvironmentSatisfaction\"\r\n                value={formData.EnvironmentSatisfaction}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"EnvironmentSatisfaction\"\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option</option>\r\n                <option>1 - Low</option>\r\n                <option>2 - Medium</option>\r\n                <option>3 - High</option>\r\n                <option>4 - Very High</option>\r\n              </select>\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Gender</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"gender\"\r\n                name=\"Gender\"\r\n                value={formData.Gender}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"Gender\"\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option</option>\r\n                <option>0 - Male </option>\r\n                <option>1 - Female</option>\r\n              </select>\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Job_involvement</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"job_involvement\"\r\n                name=\"JobInvolvement\"\r\n                value={formData.JobInvolvement}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"JobInvolvement\"\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option</option>\r\n                <option>1 - Low</option>\r\n                <option>2 - Medium</option>\r\n                <option>3 - High</option>\r\n                <option>4 - Very High</option>\r\n              </select>\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Job_level</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"1 - 5\"\r\n                name=\"JobLevel\"\r\n                value={formData.JobLevel}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"JobLevel\"\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option(Low to High JobLevel)</option>\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n              </select>\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Job_role</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"job_role\"\r\n                name=\"JobRole\"\r\n                value={formData.JobRole}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"JobRole\"\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option</option>\r\n                <option>0 - Sales Executive </option>\r\n                <option>1 - Research Scientist</option>\r\n                <option>2 - Laboratory Technician</option>\r\n                <option>3 - Manufacturing Director</option>\r\n                <option>4 - Healthcare Representative</option>\r\n                <option>5 - Manager</option>\r\n                <option>6 - Sales Representative</option>\r\n                <option>7 - Research Director</option>\r\n                <option>8 - Human Resources</option>\r\n              </select>\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Job_satisfaction</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"job_satisfaction\"\r\n                name=\"JobSatisfaction\"\r\n                value={formData.JobSatisfaction}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"JobSatisfaction\"\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option</option>\r\n                <option>1 - Low</option>\r\n                <option>2 - Medium</option>\r\n                <option>3 - High</option>\r\n                <option>4 - Very High</option>\r\n              </select>\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Marital_status</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter marital status\"\r\n                name=\"MaritalStatus\"\r\n                value={formData.MaritalStatus}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"MaritalStatus\"\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option</option>\r\n                <option>0 - Single</option>\r\n                <option>1 - Married</option>\r\n                <option>2 - Divorced</option>\r\n              </select>\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>No_of_companies_worked</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Total companies_worked\"\r\n                name=\"NumCompaniesWorked\"\r\n                value={formData.NumCompaniesWorked}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Overtime</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"overtime\"\r\n                name=\"OverTime\"\r\n                value={formData.OverTime}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"OverTime\"\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option</option>\r\n                <option>0 - No</option>\r\n                <option>1 - Yes</option>\r\n              </select>\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Percent_salary_hike</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Emp salary_hike\"\r\n                name=\"PercentSalaryHike\"\r\n                value={formData.PercentSalaryHike}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Performance_rating</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"performance_rating\"\r\n                name=\"PerformanceRating\"\r\n                value={formData.PerformanceRating}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"PerformanceRating\"\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option</option>\r\n                <option>1 - Low</option>\r\n                <option>2 - Good</option>\r\n                <option>3 - Excellent</option>\r\n                <option>4 - Outstanding</option>\r\n              </select>\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Relationship_satisfaction</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"relationship_satisfaction\"\r\n                name=\"RelationshipSatisfaction\"\r\n                value={formData.RelationshipSatisfaction}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"RelationshipSatisfaction\"\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option</option>\r\n                <option>1 - Low</option>\r\n                <option>2 - Medium</option>\r\n                <option>3 - High</option>\r\n                <option>4 - Very High</option>\r\n              </select>\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Stock_option_level</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"stock_option_level\"\r\n                name=\"StockOptionLevel\"\r\n                value={formData.StockOptionLevel}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"StockOptionLevel\"\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option(Low to High)</option>\r\n                <option>0</option>\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n              </select>\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Total_working_years</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Total_working_years\"\r\n                name=\"TotalWorkingYears\"\r\n                value={formData.TotalWorkingYears}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Training_times_last_year</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Total training_months_spent_last_year\"\r\n                name=\"TrainingTimesLastYear\"\r\n                value={formData.TrainingTimesLastYear}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Work_life_balance</Form.Label>\r\n              {/* <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"work_life_balance\"\r\n                name=\"WorkLifeBalance\"\r\n                value={formData.WorkLifeBalance}\r\n                onChange={this.handleChange}\r\n              /> */}\r\n              <br></br>\r\n              <select\r\n               className=\"options\"\r\n               name=\"WorkLifeBalance\"\r\n               onChange={this.handleOptions}>\r\n                <option>Choose an option</option>\r\n                <option>1 - Bad</option>\r\n                <option>2 - Good</option>\r\n                <option>3 - Better</option>\r\n                <option>4 - Best</option>\r\n              </select>\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Years_at_company</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Years_at_company\"\r\n                name=\"YearsAtCompany\"\r\n                value={formData.YearsAtCompany}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Years_in_current_role</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Years_in_current_role\"\r\n                name=\"YearsInCurrentRole\"\r\n                value={formData.YearsInCurrentRole}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Years_since_last_promotion</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Years_since_last_promotion\"\r\n                name=\"YearsSinceLastPromotion\"\r\n                value={formData.YearsSinceLastPromotion}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <Form.Label>Years_with_current_manager</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Years_with_current_manager\"\r\n                name=\"YearsWithCurrManager\"\r\n                value={formData.YearsWithCurrManager}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                block\r\n                variant=\"success\"\r\n                disabled={isLoading}\r\n                onClick={!isLoading ? this.handlePredictClick : null}\r\n              >\r\n                {isLoading ? \"Making prediction\" : \"Predict\"}\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                block\r\n                variant=\"danger\"\r\n                disabled={isLoading}\r\n                onClick={this.handleCancelClick}\r\n              >\r\n                Reset prediction\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          {/* </Form> */}\r\n          {result === \"\" ? null : (\r\n            <Row>\r\n              <Col className=\"result-container\">\r\n                {result === \"Attrition No\" ? (\r\n                  <h5 id=\"result1\">{name + ` : ` + result}</h5>\r\n                ) : (\r\n                  <h5 id=\"result2\">{name + ` : ` + result}</h5>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleFile;\r\n","import React, { Component } from \"react\";\r\nimport \"./MU.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { ExcelRenderer } from \"react-excel-renderer\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nclass MultipleFile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rows: \"\",\r\n      cols: \"\",\r\n      formData: {\r\n        Age:\"\", \r\n        BusinessTravel:\"\",\r\n        MonthlyIncome:\"\", \r\n        MonthlyRate:\"\", \r\n        Department:\"\",\r\n        DistanceFromHome:\"\",\r\n        Education:\"\", \r\n        EducationField:\"\", \r\n        EnvironmentSatisfaction:\"\", \r\n        Gender:\"\", \r\n        HourlyRate:\"\", \r\n        DailyRate:\"\", \r\n        JobInvolvement:\"\",\r\n        JobLevel:\"\",\t\r\n        JobRole:\"\", \r\n        JobSatisfaction:\"\", \r\n        MaritalStatus:\"\", \r\n        NumCompaniesWorked:\"\",\r\n        OverTime:\"\", \r\n        StandardHours:\"\", \r\n        PercentSalaryHike:\"\", \r\n        PerformanceRating:\"\", \r\n        RelationshipSatisfaction:\"\", \r\n        StockOptionLevel:\"\",\t\r\n        TotalWorkingYears:\"\", \r\n        TrainingTimesLastYear:\"\", \r\n        WorkLifeBalance:\"\", \r\n        YearsAtCompany:\"\", \r\n        YearsInCurrentRole:\"\", \r\n        YearsSinceLastPromotion:\"\", \r\n        YearsWithCurrManager:\"\",\r\n      },\r\n      res: \"\",\r\n      excelData: [],\r\n      theInputKey: \"\",\r\n      // load: false,\r\n      isLoading:false,\r\n    };\r\n  }\r\n  // load = () => {\r\n  //   if (this.state.res.length === this.state.rows.length - 1) {\r\n  //     this.setState({ load: true });\r\n  //   }\r\n  // };\r\n  handleExcel = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.isLoading) {\r\n      return alert('Prediction in queue'); // Prevent execution if the button is already disabled (loading)\r\n    }\r\n    const data = this.state.rows;\r\n    // console.log(data);\r\n    \r\n    const formData = this.state.formData;\r\n    \r\n    if(data === \"\") return alert(\"Please Upload File\")\r\n    \r\n    // for (let i = 1; i < data.length; i++) {\r\n    //   // var j = 1;\r\n    //   for (let j=1;j<data[i].length;j++) {\r\n    //     // console.log(key, formData[key]);\r\n    //     const k = data[0][j]\r\n    //     if(k !== 'EmployeeNumber'){\r\n    //       formData[k] = data[i][data[0].indexOf(k)];\r\n    //     }\r\n    //   }\r\n\r\n    this.setState({ res: \"\",isLoading:true });\r\n\r\n    for(let i=1;i<data.length;i++){\r\n      \r\n      for(let j=0;j<data[i].length;j++){\r\n        const k = data[0][j]\r\n          if(k !== 'EmployeeNumber'){\r\n            formData[k] = data[i][data[0].indexOf(k)];\r\n          }\r\n      }\r\n      console.log(formData)\r\n        fetch(\"http://mindhunter.pythonanywhere.com/predict\", {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify(formData),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            console.log(response.result);\r\n            this.setState((previousState) => ({\r\n              res: [...previousState.res, response.result],\r\n            }));\r\n          }).catch(err => console.log(err));\r\n    }\r\n    // if(this.state.res.length !== 0){\r\n    // this.setState({load:true,isLoading:false})\r\n    // }\r\n    // this.load();\r\n  };\r\n  // componentDidUpdate(){\r\n  //   console.log(this.state.res.length, this.state.rows.length-1)\r\n  //   if(this.state.load===true) this.setState({isLoading:false})\r\n  // }\r\n\r\n  fileHandler = (event) => {\r\n    this.setState({rows:\"\",cols:\"\",res:\"\"})\r\n    let fileObj = event.target.files[0];\r\n    console.log(event.target.files);\r\n\r\n    if (fileObj) {\r\n      ExcelRenderer(fileObj, (err, resp) => {\r\n        if (err) {\r\n          console.log(err);\r\n        } else {\r\n          this.setState({\r\n            cols: resp.cols,\r\n            rows: resp.rows,\r\n          });\r\n          console.log(this.state.rows[0]);\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ rows: \"\", cols: \"\" });\r\n    }\r\n  };\r\n\r\n  toExcel = () => {\r\n    this.setState({ excelData: [] });\r\n    const res = this.state.res;\r\n\r\n    if(res === \"\") return alert('Please predict attrtition first')\r\n    \r\n    const index = this.state.rows[0].indexOf('EmployeeNumber')\r\n    for (let i = 0; i < res.length; i++) {\r\n      this.state.excelData.push({ id: this.state.rows[i+1][index], ans: res[i] });\r\n      \r\n    }\r\n    if (this.state.excelData.length !== 0) {\r\n      console.log(\r\n        typeof this.state.excelData[0].ans,\r\n        this.state.excelData[0].ans\r\n      );\r\n      \r\n\r\n      // Export to Excel\r\n      const fileType =\r\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n      const fileExtension = \".xlsx\";\r\n\r\n      const ws = XLSX.utils.json_to_sheet(this.state.excelData);\r\n      const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n      const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n      const data = new Blob([excelBuffer], { type: fileType });\r\n      FileSaver.saveAs(data, \"Employees\" + fileExtension);\r\n    }\r\n  };\r\n\r\n  // sampleExcel() {\r\n  //   const fileType =\r\n  //       \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  //     const fileExtension = \".xlsx\";\r\n\r\n  //     const ws = XLSX.utils.json_to_sheet(this.state.excelData);\r\n  //     const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n  //     const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n  //     const data = new Blob([excelBuffer], { type: fileType });\r\n  //     FileSaver.saveAs(data, \"Employees\" + fileExtension);\r\n  // }\r\n\r\n  functionThatResetsTheFileInput() {\r\n    let randomString = Math.random().toString(36);\r\n\r\n    this.setState({\r\n      theInputKey: randomString,\r\n      res: \"\",\r\n      rows: \"\",\r\n    });\r\n    // console.log(this.state.theInputKey);\r\n  }\r\n\r\n  render() {\r\n    // const res = [...this.state.res];\r\n\r\n    return (\r\n      <Container>\r\n        {/* <Form> */}\r\n        <div className=\"content\">\r\n          <div className=\"a\">\r\n            <header className=\"a-b\">\r\n              {this.state.rows !== \"\" ? (\r\n                <h4>File uploaded</h4>\r\n              ) : (\r\n                <h4>Please upload excel file</h4>\r\n              )}\r\n\r\n              <div className=\"files\">\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={this.fileHandler.bind(this)}\r\n                  style={{ padding: \"10px\" }}\r\n                  accept=\".xlsx, .xls, .csv\"\r\n                  key={this.state.theInputKey || \"\"}\r\n                />\r\n\r\n                {/* <Button style={{margin:\"7px\",padding:\"5px\"}} onClick={this.sampleExcel}>Sample ExcelData</Button> */}\r\n              </div>\r\n            </header>\r\n          </div>\r\n\r\n\r\n          <div>\r\n\r\n            {( (this.state.rows.length-1)===this.state.res.length) === true ? (\r\n              <h4>Prediction Complete</h4>\r\n            ) : (((this.state.res.length<this.state.rows.length-1) && (this.state.res.length!==0)) ? (<h4>Predicting please wait...</h4>) :\r\n              (<h4>Press Predict Button</h4>)\r\n            )}\r\n            <Button block variant=\"success\" onClick={this.handleExcel} disabled={this.state.isLoading}>\r\n              Predict\r\n            </Button>\r\n              \r\n            <div className=\"prac\">\r\n            <Button onClick={this.toExcel}>Download Excel</Button>\r\n              <button\r\n                className=\"mul\"\r\n                // variant=\"success\"\r\n                onClick={this.functionThatResetsTheFileInput}\r\n              >\r\n                <b>Reset</b>\r\n              </button>  \r\n              \r\n            </div> \r\n          </div>\r\n        </div>\r\n        {/* </Form> */}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MultipleFile;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\r\nimport SingleFile from \"./SingleFile\";\r\nimport MultipleFile from \"./MultipleFile\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = JSON.parse(window.localStorage.getItem(\"state\")) || {\r\n      flag: 0,\r\n    };\r\n\r\n    // Binding the event handler to the class instance\r\n    this.handlePopstate = this.handlePopstate.bind(this);\r\n  }\r\n\r\n  // Adding the event listener when the component mounts\r\n  componentDidMount() {\r\n    window.addEventListener(\"popstate\", this.handlePopstate);\r\n  }\r\n\r\n  // To Remove the event listener when the component unmounts\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"popstate\", this.handlePopstate);\r\n  }\r\n\r\n  // Defining the event handler to be executed when the popstate event occurs\r\n  handlePopstate(event) {\r\n    // console.log(event);\r\n    if (this.state.flag === 1 || this.state.flag === 2)\r\n      this.setState({ flag: 0 });\r\n    else this.setState({ flag: 1 });\r\n  }\r\n\r\n  setState(state) {\r\n    window.localStorage.setItem(\"state\", JSON.stringify(state));\r\n    super.setState(state);\r\n  }\r\n\r\n  changeRoute1 = () => {\r\n    this.setState({ flag: 1 });\r\n  };\r\n\r\n  changeRoute2 = () => {\r\n    this.setState({ flag: 2 });\r\n  };\r\n\r\n  render() {\r\n    const flag = this.state.flag;\r\n    console.log(flag);\r\n    return (\r\n      <Router>\r\n        <Container>\r\n          <Form>\r\n            <div>\r\n              <h1 className=\"title\">Employee Attrition Detection</h1>\r\n            </div>\r\n            {flag === 0 ? (\r\n              <div>\r\n                <h1 className=\"b\">Choose the type of Prediction Method</h1>\r\n                <button className=\"single\">\r\n                  <Link to=\"/1st\" onClick={this.changeRoute1}>\r\n                    <b>Single User</b>\r\n                  </Link>\r\n                </button>\r\n                {/* <Link className=\"single\" to=\"/1st\" onClick={this.changeRoute1}>\r\n                  SingleUser\r\n                </Link> */}\r\n\r\n                <button className=\"multiple\">\r\n                  <Link to=\"/2nd\" onClick={this.changeRoute2}>\r\n                    <b>Multiple User</b>\r\n                  </Link>\r\n                </button>\r\n                {/* <Link to=\"/2nd\" onClick={this.changeRoute2}>\r\n                  MultipleUser\r\n                </Link> */}\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <button className=\"home\">\r\n                  <Link\r\n                    to=\"/\"\r\n                    onClick={() => {\r\n                      this.setState({ flag: 0 });\r\n                    }}\r\n                  >\r\n                    <b>HOME</b>\r\n                  </Link>\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            <div>\r\n              <Routes>\r\n                {/* <Route\r\n                path=\"/\"\r\n                element={<App />}\r\n                \r\n              /> */}\r\n                <Route path=\"/1st\" element={<SingleFile />} />\r\n\r\n                <Route path=\"/2nd\" element={<MultipleFile />} />\r\n              </Routes>\r\n            </div>\r\n          </Form>\r\n        </Container>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}